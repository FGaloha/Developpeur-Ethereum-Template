{
  "address": "0x5E9bF2852C2B6B37c8458609b0A4769A651D8029",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ProposalRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "voterAddress",
          "type": "address"
        }
      ],
      "name": "VoterRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum Voting.WorkflowStatus",
          "name": "previousStatus",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "enum Voting.WorkflowStatus",
          "name": "newStatus",
          "type": "uint8"
        }
      ],
      "name": "WorkflowStatusChange",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_desc",
          "type": "string"
        }
      ],
      "name": "addProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "addVoter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endProposalsRegistering",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endVotingSession",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getOneProposal",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "voteCount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Voting.Proposal",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "getVoter",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isRegistered",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "votedProposalId",
              "type": "uint256"
            }
          ],
          "internalType": "struct Voting.Voter",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "setVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startProposalsRegistering",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startVotingSession",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tallyVotes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "winningProposalID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "workflowStatus",
      "outputs": [
        {
          "internalType": "enum Voting.WorkflowStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xeeef0c2929699240a65436fdd07e4fcf6f3898f255700b3dd80a0be505f1ffbd",
  "receipt": {
    "to": null,
    "from": "0xA770487d72Baad096729965011b90FFEDfecB1b4",
    "contractAddress": "0x5E9bF2852C2B6B37c8458609b0A4769A651D8029",
    "transactionIndex": 122,
    "gasUsed": "1254487",
    "logsBloom": "0x
    "blockHash": "0x37c6738cee368ffc738dbddc6b79a0fa37d30608e04b024716ba7935a1971190",
    "transactionHash": "0xeeef0c2929699240a65436fdd07e4fcf6f3898f255700b3dd80a0be505f1ffbd",
    "logs": [
      {
        "transactionIndex": 122,
        "blockNumber": 8380322,
        "transactionHash": "0xeeef0c2929699240a65436fdd07e4fcf6f3898f255700b3dd80a0be505f1ffbd",
        "address": "0x5E9bF2852C2B6B37c8458609b0A4769A651D8029",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a770487d72baad096729965011b90ffedfecb1b4"
        ],
        "data": "0x",
        "logIndex": 314,
        "blockHash": "0x37c6738cee368ffc738dbddc6b79a0fa37d30608e04b024716ba7935a1971190"
      }
    ],
    "blockNumber": 8380322,
    "cumulativeGasUsed": "24791990",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "55a121088bec43529bbc5e3c13a7e9de",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ProposalRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"}],\"name\":\"VoterRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum Voting.WorkflowStatus\",\"name\":\"previousStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum Voting.WorkflowStatus\",\"name\":\"newStatus\",\"type\":\"uint8\"}],\"name\":\"WorkflowStatusChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_desc\",\"type\":\"string\"}],\"name\":\"addProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"addVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endProposalsRegistering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endVotingSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getOneProposal\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"internalType\":\"struct Voting.Proposal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getVoter\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"votedProposalId\",\"type\":\"uint256\"}],\"internalType\":\"struct Voting.Voter\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"setVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startProposalsRegistering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startVotingSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tallyVotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningProposalID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"workflowStatus\",\"outputs\":[{\"internalType\":\"enum Voting.WorkflowStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Voting.sol\":\"Voting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Voting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Voting is Ownable {\\n    uint256 public winningProposalID;\\n\\n    struct Voter {\\n        bool isRegistered;\\n        bool hasVoted;\\n        uint256 votedProposalId;\\n    }\\n\\n    struct Proposal {\\n        string description;\\n        uint256 voteCount;\\n    }\\n\\n    enum WorkflowStatus {\\n        RegisteringVoters,\\n        ProposalsRegistrationStarted,\\n        ProposalsRegistrationEnded,\\n        VotingSessionStarted,\\n        VotingSessionEnded,\\n        VotesTallied\\n    }\\n\\n    WorkflowStatus public workflowStatus;\\n    Proposal[] proposalsArray;\\n    mapping(address => Voter) voters;\\n\\n    event VoterRegistered(address voterAddress);\\n    event WorkflowStatusChange(\\n        WorkflowStatus previousStatus,\\n        WorkflowStatus newStatus\\n    );\\n    event ProposalRegistered(uint256 proposalId);\\n    event Voted(address voter, uint256 proposalId);\\n\\n    modifier onlyVoters() {\\n        require(voters[msg.sender].isRegistered, \\\"You're not a voter\\\");\\n        _;\\n    }\\n\\n    // on peut faire un modifier pour les \\u00e9tats\\n\\n    // ::::::::::::: GETTERS ::::::::::::: //\\n\\n    function getVoter(address _addr)\\n        external\\n        view\\n        onlyVoters\\n        returns (Voter memory)\\n    {\\n        return voters[_addr];\\n    }\\n\\n    function getOneProposal(uint256 _id)\\n        external\\n        view\\n        onlyVoters\\n        returns (Proposal memory)\\n    {\\n        return proposalsArray[_id];\\n    }\\n\\n    // ::::::::::::: REGISTRATION ::::::::::::: //\\n\\n    function addVoter(address _addr) external onlyOwner {\\n        require(\\n            workflowStatus == WorkflowStatus.RegisteringVoters,\\n            \\\"Voters registration is not open yet\\\"\\n        );\\n        require(voters[_addr].isRegistered != true, \\\"Already registered\\\");\\n\\n        voters[_addr].isRegistered = true;\\n        emit VoterRegistered(_addr);\\n    }\\n\\n    // ::::::::::::: PROPOSAL ::::::::::::: //\\n\\n    function addProposal(string calldata _desc) external onlyVoters {\\n        require(\\n            workflowStatus == WorkflowStatus.ProposalsRegistrationStarted,\\n            \\\"Proposals are not allowed yet\\\"\\n        );\\n        require(\\n            keccak256(abi.encode(_desc)) != keccak256(abi.encode(\\\"\\\")),\\n            \\\"Vous ne pouvez pas ne rien proposer\\\"\\n        ); // facultatif\\n        // voir que desc est different des autres\\n\\n        Proposal memory proposal;\\n        proposal.description = _desc;\\n        proposalsArray.push(proposal);\\n        emit ProposalRegistered(proposalsArray.length - 1);\\n    }\\n\\n    // ::::::::::::: VOTE ::::::::::::: //\\n\\n    function setVote(uint256 _id) external onlyVoters {\\n        require(\\n            workflowStatus == WorkflowStatus.VotingSessionStarted,\\n            \\\"Voting session havent started yet\\\"\\n        );\\n        require(voters[msg.sender].hasVoted != true, \\\"You have already voted\\\");\\n        require(_id < proposalsArray.length, \\\"Proposal not found\\\"); // pas oblig\\u00e9, et pas besoin du >0 car uint\\n\\n        voters[msg.sender].votedProposalId = _id;\\n        voters[msg.sender].hasVoted = true;\\n        proposalsArray[_id].voteCount++;\\n\\n        emit Voted(msg.sender, _id);\\n    }\\n\\n    // ::::::::::::: STATE ::::::::::::: //\\n\\n    function startProposalsRegistering() external onlyOwner {\\n        require(\\n            workflowStatus == WorkflowStatus.RegisteringVoters,\\n            \\\"Registering proposals cant be started now\\\"\\n        );\\n        workflowStatus = WorkflowStatus.ProposalsRegistrationStarted;\\n\\n        Proposal memory proposal;\\n        proposal.description = \\\"GENESIS\\\";\\n        proposalsArray.push(proposal);\\n\\n        emit WorkflowStatusChange(\\n            WorkflowStatus.RegisteringVoters,\\n            WorkflowStatus.ProposalsRegistrationStarted\\n        );\\n    }\\n\\n    function endProposalsRegistering() external onlyOwner {\\n        require(\\n            workflowStatus == WorkflowStatus.ProposalsRegistrationStarted,\\n            \\\"Registering proposals havent started yet\\\"\\n        );\\n        workflowStatus = WorkflowStatus.ProposalsRegistrationEnded;\\n        emit WorkflowStatusChange(\\n            WorkflowStatus.ProposalsRegistrationStarted,\\n            WorkflowStatus.ProposalsRegistrationEnded\\n        );\\n    }\\n\\n    function startVotingSession() external onlyOwner {\\n        require(\\n            workflowStatus == WorkflowStatus.ProposalsRegistrationEnded,\\n            \\\"Registering proposals phase is not finished\\\"\\n        );\\n        workflowStatus = WorkflowStatus.VotingSessionStarted;\\n        emit WorkflowStatusChange(\\n            WorkflowStatus.ProposalsRegistrationEnded,\\n            WorkflowStatus.VotingSessionStarted\\n        );\\n    }\\n\\n    function endVotingSession() external onlyOwner {\\n        require(\\n            workflowStatus == WorkflowStatus.VotingSessionStarted,\\n            \\\"Voting session havent started yet\\\"\\n        );\\n        workflowStatus = WorkflowStatus.VotingSessionEnded;\\n        emit WorkflowStatusChange(\\n            WorkflowStatus.VotingSessionStarted,\\n            WorkflowStatus.VotingSessionEnded\\n        );\\n    }\\n\\n    function tallyVotes() external onlyOwner {\\n        require(\\n            workflowStatus == WorkflowStatus.VotingSessionEnded,\\n            \\\"Current status is not voting session ended\\\"\\n        );\\n        uint256 _winningProposalId;\\n        for (uint256 p = 0; p < proposalsArray.length; p++) {\\n            if (\\n                proposalsArray[p].voteCount >\\n                proposalsArray[_winningProposalId].voteCount\\n            ) {\\n                _winningProposalId = p;\\n            }\\n        }\\n        winningProposalID = _winningProposalId;\\n\\n        workflowStatus = WorkflowStatus.VotesTallied;\\n        emit WorkflowStatusChange(\\n            WorkflowStatus.VotingSessionEnded,\\n            WorkflowStatus.VotesTallied\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x1fed4b002272a818c6986e06efd48767d55676e45ca992a2813997db649e050f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6115608061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a7bfab1611610097578063d4f50f9811610066578063d4f50f98146101c8578063ee74c67814610201578063f2fde38b14610209578063f4ab9adf1461021c57600080fd5b8063a7bfab1614610199578063bdc01431146101a1578063c7038a4e146101b8578063c88af42f146101c057600080fd5b8063715018a6116100d3578063715018a61461012a5780638da5cb5b14610132578063a1edffa21461015f578063a2788cce1461017957600080fd5b8063230796ae146100fa5780632fdae3c51461010f578063378a217814610122575b600080fd5b61010d6101083660046111f8565b61022f565b005b61010d61011d366004611211565b61048d565b61010d610705565b61010d610855565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b60025461016c9060ff1681565b60405161015691906112ed565b61018c6101873660046111f8565b610869565b6040516101569190611301565b61010d6109ac565b6101aa60015481565b604051908152602001610156565b61010d610a8c565b61010d610c01565b6101db6101d6366004611385565b610cd3565b604080518251151581526020808401511515908201529181015190820152606001610156565b61010d610da5565b61010d610217366004611385565b610e77565b61010d61022a366004611385565b610f14565b3360009081526004602052604090205460ff166102935760405162461bcd60e51b815260206004820152601260248201527f596f75277265206e6f74206120766f746572000000000000000000000000000060448201526064015b60405180910390fd5b600360025460ff1660058111156102ac576102ac611283565b1461031f5760405162461bcd60e51b815260206004820152602160248201527f566f74696e672073657373696f6e20686176656e74207374617274656420796560448201527f7400000000000000000000000000000000000000000000000000000000000000606482015260840161028a565b33600090815260046020526040902054610100900460ff1615156001036103885760405162461bcd60e51b815260206004820152601660248201527f596f75206861766520616c726561647920766f74656400000000000000000000604482015260640161028a565b60035481106103d95760405162461bcd60e51b815260206004820152601260248201527f50726f706f73616c206e6f7420666f756e640000000000000000000000000000604482015260640161028a565b3360009081526004602052604090206001810182905580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055600380548290811061042d5761042d6113c2565b60009182526020822060016002909202010180549161044b83611420565b909155505060408051338152602081018390527f4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca491015b60405180910390a150565b3360009081526004602052604090205460ff166104ec5760405162461bcd60e51b815260206004820152601260248201527f596f75277265206e6f74206120766f7465720000000000000000000000000000604482015260640161028a565b600160025460ff16600581111561050557610505611283565b146105525760405162461bcd60e51b815260206004820152601d60248201527f50726f706f73616c7320617265206e6f7420616c6c6f77656420796574000000604482015260640161028a565b60405160200161056d90602080825260009082015260400190565b604051602081830303815290604052805190602001208282604051602001610596929190611458565b604051602081830303815290604052805190602001200361061f5760405162461bcd60e51b815260206004820152602360248201527f566f7573206e6520706f7576657a20706173206e65207269656e2070726f706f60448201527f7365720000000000000000000000000000000000000000000000000000000000606482015260840161028a565b60408051808201909152606081526000602082015282828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050600380546001810182559252508151805183926002027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01916106b39183916020019061115f565b50602091909101516001918201556003547f92e393e9b54e2f801d3ea4beb0c5e71a21cc34a5d34b77d0fb8a3aa1650dc18f916106ef916114a5565b60405190815260200160405180910390a1505050565b61070d611083565b600460025460ff16600581111561072657610726611283565b146107995760405162461bcd60e51b815260206004820152602a60248201527f43757272656e7420737461747573206973206e6f7420766f74696e672073657360448201527f73696f6e20656e64656400000000000000000000000000000000000000000000606482015260840161028a565b6000805b60035481101561080d57600382815481106107ba576107ba6113c2565b906000526020600020906002020160010154600382815481106107df576107df6113c2565b90600052602060002090600202016001015411156107fb578091505b8061080581611420565b91505061079d565b5060018190556002805460ff191660059081179091556040517f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f9161048291600491906114bc565b61085d611083565b61086760006110ea565b565b6040805180820190915260608152600060208201523360009081526004602052604090205460ff166108dd5760405162461bcd60e51b815260206004820152601260248201527f596f75277265206e6f74206120766f7465720000000000000000000000000000604482015260640161028a565b600382815481106108f0576108f06113c2565b9060005260206000209060020201604051806040016040529081600082018054610919906114d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610945906114d7565b80156109925780601f1061096757610100808354040283529160200191610992565b820191906000526020600020905b81548152906001019060200180831161097557829003601f168201915b505050505081526020016001820154815250509050919050565b6109b4611083565b600360025460ff1660058111156109cd576109cd611283565b14610a405760405162461bcd60e51b815260206004820152602160248201527f566f74696e672073657373696f6e20686176656e74207374617274656420796560448201527f7400000000000000000000000000000000000000000000000000000000000000606482015260840161028a565b6002805460ff191660049081179091556040517f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f91610a8291600391906114bc565b60405180910390a1565b610a94611083565b600060025460ff166005811115610aad57610aad611283565b14610b205760405162461bcd60e51b815260206004820152602960248201527f5265676973746572696e672070726f706f73616c732063616e7420626520737460448201527f6172746564206e6f770000000000000000000000000000000000000000000000606482015260840161028a565b6002805460ff19166001908117825560408051808201825260608152600060208083018290528351808501909452600784527f47454e455349530000000000000000000000000000000000000000000000000084820152928252600380549485018155905280518051919485947fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91020192610bc19284929091019061115f565b506020820151816001015550507f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f600060016040516104829291906114bc565b610c09611083565b600160025460ff166005811115610c2257610c22611283565b14610c955760405162461bcd60e51b815260206004820152602860248201527f5265676973746572696e672070726f706f73616c7320686176656e742073746160448201527f7274656420796574000000000000000000000000000000000000000000000000606482015260840161028a565b6002805460ff1916811781556040517f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f91610a8291600191906114bc565b604080516060810182526000808252602080830182905282840182905233825260049052919091205460ff16610d4b5760405162461bcd60e51b815260206004820152601260248201527f596f75277265206e6f74206120766f7465720000000000000000000000000000604482015260640161028a565b5073ffffffffffffffffffffffffffffffffffffffff166000908152600460209081526040918290208251606081018452815460ff8082161515835261010090910416151592810192909252600101549181019190915290565b610dad611083565b6002805460ff166005811115610dc557610dc5611283565b14610e385760405162461bcd60e51b815260206004820152602b60248201527f5265676973746572696e672070726f706f73616c73207068617365206973206e60448201527f6f742066696e6973686564000000000000000000000000000000000000000000606482015260840161028a565b6002805460ff1916600390811782556040517f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f92610a829290916114bc565b610e7f611083565b73ffffffffffffffffffffffffffffffffffffffff8116610f085760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161028a565b610f11816110ea565b50565b610f1c611083565b600060025460ff166005811115610f3557610f35611283565b14610fa85760405162461bcd60e51b815260206004820152602360248201527f566f7465727320726567697374726174696f6e206973206e6f74206f70656e2060448201527f7965740000000000000000000000000000000000000000000000000000000000606482015260840161028a565b73ffffffffffffffffffffffffffffffffffffffff811660009081526004602052604090205460ff1615156001036110225760405162461bcd60e51b815260206004820152601260248201527f416c726561647920726567697374657265640000000000000000000000000000604482015260640161028a565b73ffffffffffffffffffffffffffffffffffffffff8116600081815260046020908152604091829020805460ff1916600117905590519182527fb6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd9101610482565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028a565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461116b906114d7565b90600052602060002090601f01602090048101928261118d57600085556111d3565b82601f106111a657805160ff19168380011785556111d3565b828001600101855582156111d3579182015b828111156111d35782518255916020019190600101906111b8565b506111df9291506111e3565b5090565b5b808211156111df57600081556001016111e4565b60006020828403121561120a57600080fd5b5035919050565b6000806020838503121561122457600080fd5b823567ffffffffffffffff8082111561123c57600080fd5b818501915085601f83011261125057600080fd5b81358181111561125f57600080fd5b86602082850101111561127157600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600681106112e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b602081016112fb82846112b2565b92915050565b600060208083528351604082850152805180606086015260005b818110156113375782810184015186820160800152830161131b565b81811115611349576000608083880101525b50949091015160408401525050601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160160800190565b60006020828403121561139757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146113bb57600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611451576114516113f1565b5060010190565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b6000828210156114b7576114b76113f1565b500390565b604081016114ca82856112b2565b6113bb60208301846112b2565b600181811c908216806114eb57607f821691505b602082108103611524577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea264697066735822122030ae9ff04949bb9205ffcc0829f883fa42970ec2bb4222268cc4c39a0d615b3764736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a7bfab1611610097578063d4f50f9811610066578063d4f50f98146101c8578063ee74c67814610201578063f2fde38b14610209578063f4ab9adf1461021c57600080fd5b8063a7bfab1614610199578063bdc01431146101a1578063c7038a4e146101b8578063c88af42f146101c057600080fd5b8063715018a6116100d3578063715018a61461012a5780638da5cb5b14610132578063a1edffa21461015f578063a2788cce1461017957600080fd5b8063230796ae146100fa5780632fdae3c51461010f578063378a217814610122575b600080fd5b61010d6101083660046111f8565b61022f565b005b61010d61011d366004611211565b61048d565b61010d610705565b61010d610855565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b60025461016c9060ff1681565b60405161015691906112ed565b61018c6101873660046111f8565b610869565b6040516101569190611301565b61010d6109ac565b6101aa60015481565b604051908152602001610156565b61010d610a8c565b61010d610c01565b6101db6101d6366004611385565b610cd3565b604080518251151581526020808401511515908201529181015190820152606001610156565b61010d610da5565b61010d610217366004611385565b610e77565b61010d61022a366004611385565b610f14565b3360009081526004602052604090205460ff166102935760405162461bcd60e51b815260206004820152601260248201527f596f75277265206e6f74206120766f746572000000000000000000000000000060448201526064015b60405180910390fd5b600360025460ff1660058111156102ac576102ac611283565b1461031f5760405162461bcd60e51b815260206004820152602160248201527f566f74696e672073657373696f6e20686176656e74207374617274656420796560448201527f7400000000000000000000000000000000000000000000000000000000000000606482015260840161028a565b33600090815260046020526040902054610100900460ff1615156001036103885760405162461bcd60e51b815260206004820152601660248201527f596f75206861766520616c726561647920766f74656400000000000000000000604482015260640161028a565b60035481106103d95760405162461bcd60e51b815260206004820152601260248201527f50726f706f73616c206e6f7420666f756e640000000000000000000000000000604482015260640161028a565b3360009081526004602052604090206001810182905580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055600380548290811061042d5761042d6113c2565b60009182526020822060016002909202010180549161044b83611420565b909155505060408051338152602081018390527f4d99b957a2bc29a30ebd96a7be8e68fe50a3c701db28a91436490b7d53870ca491015b60405180910390a150565b3360009081526004602052604090205460ff166104ec5760405162461bcd60e51b815260206004820152601260248201527f596f75277265206e6f74206120766f7465720000000000000000000000000000604482015260640161028a565b600160025460ff16600581111561050557610505611283565b146105525760405162461bcd60e51b815260206004820152601d60248201527f50726f706f73616c7320617265206e6f7420616c6c6f77656420796574000000604482015260640161028a565b60405160200161056d90602080825260009082015260400190565b604051602081830303815290604052805190602001208282604051602001610596929190611458565b604051602081830303815290604052805190602001200361061f5760405162461bcd60e51b815260206004820152602360248201527f566f7573206e6520706f7576657a20706173206e65207269656e2070726f706f60448201527f7365720000000000000000000000000000000000000000000000000000000000606482015260840161028a565b60408051808201909152606081526000602082015282828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050600380546001810182559252508151805183926002027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01916106b39183916020019061115f565b50602091909101516001918201556003547f92e393e9b54e2f801d3ea4beb0c5e71a21cc34a5d34b77d0fb8a3aa1650dc18f916106ef916114a5565b60405190815260200160405180910390a1505050565b61070d611083565b600460025460ff16600581111561072657610726611283565b146107995760405162461bcd60e51b815260206004820152602a60248201527f43757272656e7420737461747573206973206e6f7420766f74696e672073657360448201527f73696f6e20656e64656400000000000000000000000000000000000000000000606482015260840161028a565b6000805b60035481101561080d57600382815481106107ba576107ba6113c2565b906000526020600020906002020160010154600382815481106107df576107df6113c2565b90600052602060002090600202016001015411156107fb578091505b8061080581611420565b91505061079d565b5060018190556002805460ff191660059081179091556040517f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f9161048291600491906114bc565b61085d611083565b61086760006110ea565b565b6040805180820190915260608152600060208201523360009081526004602052604090205460ff166108dd5760405162461bcd60e51b815260206004820152601260248201527f596f75277265206e6f74206120766f7465720000000000000000000000000000604482015260640161028a565b600382815481106108f0576108f06113c2565b9060005260206000209060020201604051806040016040529081600082018054610919906114d7565b80601f0160208091040260200160405190810160405280929190818152602001828054610945906114d7565b80156109925780601f1061096757610100808354040283529160200191610992565b820191906000526020600020905b81548152906001019060200180831161097557829003601f168201915b505050505081526020016001820154815250509050919050565b6109b4611083565b600360025460ff1660058111156109cd576109cd611283565b14610a405760405162461bcd60e51b815260206004820152602160248201527f566f74696e672073657373696f6e20686176656e74207374617274656420796560448201527f7400000000000000000000000000000000000000000000000000000000000000606482015260840161028a565b6002805460ff191660049081179091556040517f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f91610a8291600391906114bc565b60405180910390a1565b610a94611083565b600060025460ff166005811115610aad57610aad611283565b14610b205760405162461bcd60e51b815260206004820152602960248201527f5265676973746572696e672070726f706f73616c732063616e7420626520737460448201527f6172746564206e6f770000000000000000000000000000000000000000000000606482015260840161028a565b6002805460ff19166001908117825560408051808201825260608152600060208083018290528351808501909452600784527f47454e455349530000000000000000000000000000000000000000000000000084820152928252600380549485018155905280518051919485947fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91020192610bc19284929091019061115f565b506020820151816001015550507f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f600060016040516104829291906114bc565b610c09611083565b600160025460ff166005811115610c2257610c22611283565b14610c955760405162461bcd60e51b815260206004820152602860248201527f5265676973746572696e672070726f706f73616c7320686176656e742073746160448201527f7274656420796574000000000000000000000000000000000000000000000000606482015260840161028a565b6002805460ff1916811781556040517f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f91610a8291600191906114bc565b604080516060810182526000808252602080830182905282840182905233825260049052919091205460ff16610d4b5760405162461bcd60e51b815260206004820152601260248201527f596f75277265206e6f74206120766f7465720000000000000000000000000000604482015260640161028a565b5073ffffffffffffffffffffffffffffffffffffffff166000908152600460209081526040918290208251606081018452815460ff8082161515835261010090910416151592810192909252600101549181019190915290565b610dad611083565b6002805460ff166005811115610dc557610dc5611283565b14610e385760405162461bcd60e51b815260206004820152602b60248201527f5265676973746572696e672070726f706f73616c73207068617365206973206e60448201527f6f742066696e6973686564000000000000000000000000000000000000000000606482015260840161028a565b6002805460ff1916600390811782556040517f0a97a4ee45751e2abf3e4fc8946939630b11b371ea8ae39ccdc3056e98f5cc3f92610a829290916114bc565b610e7f611083565b73ffffffffffffffffffffffffffffffffffffffff8116610f085760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161028a565b610f11816110ea565b50565b610f1c611083565b600060025460ff166005811115610f3557610f35611283565b14610fa85760405162461bcd60e51b815260206004820152602360248201527f566f7465727320726567697374726174696f6e206973206e6f74206f70656e2060448201527f7965740000000000000000000000000000000000000000000000000000000000606482015260840161028a565b73ffffffffffffffffffffffffffffffffffffffff811660009081526004602052604090205460ff1615156001036110225760405162461bcd60e51b815260206004820152601260248201527f416c726561647920726567697374657265640000000000000000000000000000604482015260640161028a565b73ffffffffffffffffffffffffffffffffffffffff8116600081815260046020908152604091829020805460ff1916600117905590519182527fb6be2187d059cc2a55fe29e0e503b566e1e0f8c8780096e185429350acffd3dd9101610482565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161028a565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461116b906114d7565b90600052602060002090601f01602090048101928261118d57600085556111d3565b82601f106111a657805160ff19168380011785556111d3565b828001600101855582156111d3579182015b828111156111d35782518255916020019190600101906111b8565b506111df9291506111e3565b5090565b5b808211156111df57600081556001016111e4565b60006020828403121561120a57600080fd5b5035919050565b6000806020838503121561122457600080fd5b823567ffffffffffffffff8082111561123c57600080fd5b818501915085601f83011261125057600080fd5b81358181111561125f57600080fd5b86602082850101111561127157600080fd5b60209290920196919550909350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600681106112e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b602081016112fb82846112b2565b92915050565b600060208083528351604082850152805180606086015260005b818110156113375782810184015186820160800152830161131b565b81811115611349576000608083880101525b50949091015160408401525050601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160160800190565b60006020828403121561139757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146113bb57600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611451576114516113f1565b5060010190565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b6000828210156114b7576114b76113f1565b500390565b604081016114ca82856112b2565b6113bb60208301846112b2565b600181811c908216806114eb57607f821691505b602082108103611524577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea264697066735822122030ae9ff04949bb9205ffcc0829f883fa42970ec2bb4222268cc4c39a0d615b3764736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Voting.sol:Voting",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 141,
        "contract": "contracts/Voting.sol:Voting",
        "label": "winningProposalID",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 163,
        "contract": "contracts/Voting.sol:Voting",
        "label": "workflowStatus",
        "offset": 0,
        "slot": "2",
        "type": "t_enum(WorkflowStatus)160"
      },
      {
        "astId": 167,
        "contract": "contracts/Voting.sol:Voting",
        "label": "proposalsArray",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_struct(Proposal)153_storage)dyn_storage"
      },
      {
        "astId": 172,
        "contract": "contracts/Voting.sol:Voting",
        "label": "voters",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(Voter)148_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Proposal)153_storage)dyn_storage": {
        "base": "t_struct(Proposal)153_storage",
        "encoding": "dynamic_array",
        "label": "struct Voting.Proposal[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(WorkflowStatus)160": {
        "encoding": "inplace",
        "label": "enum Voting.WorkflowStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Voter)148_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Voting.Voter)",
        "numberOfBytes": "32",
        "value": "t_struct(Voter)148_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)153_storage": {
        "encoding": "inplace",
        "label": "struct Voting.Proposal",
        "members": [
          {
            "astId": 150,
            "contract": "contracts/Voting.sol:Voting",
            "label": "description",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 152,
            "contract": "contracts/Voting.sol:Voting",
            "label": "voteCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Voter)148_storage": {
        "encoding": "inplace",
        "label": "struct Voting.Voter",
        "members": [
          {
            "astId": 143,
            "contract": "contracts/Voting.sol:Voting",
            "label": "isRegistered",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 145,
            "contract": "contracts/Voting.sol:Voting",
            "label": "hasVoted",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 147,
            "contract": "contracts/Voting.sol:Voting",
            "label": "votedProposalId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}